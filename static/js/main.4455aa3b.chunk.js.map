{"version":3,"sources":["pages/About.js","pages/RiskMgmt.js","pages/Symbols.js","App.js","reportWebVitals.js","index.js"],"names":["About","useStyles","makeStyles","theme","root","margin","spacing","width","RiskPerTrade","props","handleCapitalChange","event","value","target","setState","capital","handleRiskPercentageChange","riskPercentage","handleRiskChange","risk","state","this","quantity","classes","className","noValidate","autoComplete","TextField","id","required","label","onChange","disabled","React","Component","RiskMgmt","generateMap","tokens","reduce","acc","symbol","NIFTY50MAP","NIFTY50","BANKNIFTYMAP","NIFTYMIDCAP50","BANKNIFTY","Symbol","name","selected","Group","groupName","found","symbols","map","token","i","onClick","alert","join","Symbols","useState","stocks","setStocks","unknownSymbols","knownSymbols","console","log","forEach","stock","push","unknownSymbolsContent","length","defaultValue","style","text","trim","toUpperCase","replace","currentSymbols","split","App","to","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4455aa3b.chunk.js","sourcesContent":["const About = () => {\n  return <h1>About</h1>\n}\n\nexport default About;","import React from \"react\";\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport \"./RiskMgmt.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n}));\n\n\nclass RiskPerTrade extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      capital: 50000,\n      riskPercentage: 1,\n      risk: 1\n    };\n  }\n\n  handleCapitalChange = (event) => {\n    const value = event.target.value;\n    this.setState({\n      capital: value\n    });\n  }\n\n  handleRiskPercentageChange = (event) => {\n    const value = event.target.value;\n    this.setState({\n      riskPercentage: value\n    });\n  }\n\n  handleRiskChange = (event) => {\n    const value = event.target.value;\n    this.setState({\n      risk: value\n    });\n  }\n\n  render() {\n    const { capital, riskPercentage, risk} = this.state;\n    const riskAmount = (capital * riskPercentage)/100;\n    const quantity = riskAmount / risk;\n\n    const classes = this.props.className;\n\n    return (\n      <div>\n        <form  noValidate autoComplete=\"off\" className={classes}>\n        <TextField\n          id=\"capital\"\n          required\n          label=\"Enter the capital\"\n          value={this.state.capital}\n          onChange={this.handleCapitalChange}\n          className=\"risk-per-trade-item\"\n        />\n\n        <TextField\n          id=\"risk-percentage\"\n          required\n          label=\"Enter the risk percentage\"\n          value={this.state.riskPercentage}\n          onChange={this.handleRiskPercentageChange}\n          className=\"risk-per-trade-item\"\n        />\n\n        <TextField\n          id=\"stoploss\"\n          required\n          label=\"Enter the stop loss\"\n\n          value={this.state.risk}\n          onChange={this.handleRiskChange}\n          className=\"risk-per-trade-item\"\n        />\n\n        <TextField\n          id=\"quantity\"\n          disabled\n          label=\"Quantity\"\n          value={quantity}\n          className=\"risk-per-trade-item\"\n        />\n        </form>\n      </div>\n    );\n\n  }\n}\nconst RiskMgmt = () => {\n  const classes = useStyles();\n\n  return <div>\n    <h1>Risk Management</h1>\n    <RiskPerTrade className={classes.root}/>\n  </div>\n}\n\nexport default RiskMgmt;","import NIFTY50 from \"../res/nifty50.json\";\nimport BANKNIFTY from \"../res/banknifty.json\";\nimport NIFTYMIDCAP50 from \"../res/nifty-midcap50.json\";\n\nimport \"./Symbols.css\";\n\nimport { useState } from \"react\";\nimport TextField from '@material-ui/core/TextField';\n\nconst generateMap = (tokens) => {\n  tokens = tokens || [];\n  return tokens.reduce((acc, symbol) => {\n    acc[symbol] = 1;\n    return acc;\n  }, {}) ;\n}\n\nconst NIFTY50MAP = generateMap(NIFTY50);\nconst NIFTYMIDCAP50MAP = generateMap(NIFTYMIDCAP50);\nconst BANKNIFTYMAP = generateMap(BANKNIFTY);\n\n\nconst Symbol = (props) => {\n  const { name, selected } = props;\n  const classes = \"symbol \" + (selected ? \"selected\" : \"\");\n  return <div className={classes}>\n    <span>{name}</span>\n  </div>\n};\n\nconst Group = (props) => {\n  let { groupName, tokens, found = {}} = props;\n  tokens = tokens || [];\n  const symbols = tokens.map((token, i) => <Symbol key={`key-${i}`} name={token} selected={!!found[token]}/>)\n  return <div className='group'>\n    <div className=\"group-header\">\n    <h2 className=\"group-title\">{groupName}</h2>\n    <button onClick={() => {\n      alert(tokens.join(\", \"));\n    }}>Copy</button>\n    </div>\n    <div className=\"symbols\">{symbols}</div>\n  </div>\n};\n\nconst Symbols = () => {\n  const [stocks, setStocks] = useState([]);\n  const unknownSymbols = [];\n  let knownSymbols = {};\n  console.log(\"Map\", NIFTY50MAP);\n  stocks.forEach(stock => {\n    console.log(\"Stock: \", stock);\n    console.log( \"Found? : \", !!NIFTY50MAP[stock]);\n    const isknownStock = !!NIFTY50MAP[stock] || !!BANKNIFTYMAP[stock];\n     if (isknownStock) {\n      knownSymbols[stock] = 1;\n     } else {\n      unknownSymbols.push(stock);\n     }\n  });\n\n  let unknownSymbolsContent = null;\n\n  if(unknownSymbols.length > 0) {\n    unknownSymbolsContent = <Group key=\"unknownsymbols\" groupName=\"Unknown Symbols\" tokens={unknownSymbols}/>\n  } else {\n    unknownSymbolsContent = null;\n  }\n\n\n  console.log(\"unknown: \", unknownSymbols, \"Len: \", unknownSymbols.length)\n  console.log ( \"unknown content: \", unknownSymbolsContent)\n\n  return (\n    <div>\n      <h1>Symbols Management</h1>\n      <TextField\n        id=\"standard-required\"\n        label=\"Enter the symbols\"\n        defaultValue=\"\"\n        style={{ width: \"100%\" }}\n        onChange={(event) => {\n          let text = (event.target.value || \"\").trim().toUpperCase();\n          text = text.replace(/\\s/gi, \"\");\n          if (text) {\n            const currentSymbols = text.split(\",\");\n            console.log(\"Text: \", text, \"sym: \", currentSymbols);\n            setStocks(currentSymbols);\n          } else {\n            setStocks([]);\n          }\n        }}\n      />\n\n      <div>\n        {unknownSymbolsContent}\n        <Group key=\"banknifty\"  groupName=\"Bank Nifty\" tokens={BANKNIFTY} found={knownSymbols}/>\n        <Group key=\"nifty50\" groupName=\"Nifty 50\" tokens={NIFTY50} found={knownSymbols}/>\n        <Group key=\"banknifty-midcap-50\"  groupName=\"Nifty MidCap 50\" tokens={NIFTYMIDCAP50} found={knownSymbols}/>\n      </div>\n    </div>\n  );\n}\n\nexport default Symbols;","import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport About from \"./pages/About\";\nimport RiskMgmt from \"./pages/RiskMgmt\";\nimport Symbols from \"./pages/Symbols\";\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <header className=\"header\">\n          <nav>\n            <ul>\n              <li>\n                <Link to=\"/\">Symbols</Link>\n              </li>\n              <li>\n                <Link to=\"/risk\">Risk Management</Link>\n              </li>\n              <li>\n                <Link to=\"/about\">About</Link>\n              </li>\n            </ul>\n          </nav>\n        </header>\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <div className=\"container\">\n          <Switch>\n            <Route path=\"/about\">\n              <About />\n            </Route>\n            <Route path=\"/risk\">\n              <RiskMgmt />\n            </Route>\n            <Route path=\"/\">\n              <Symbols />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}